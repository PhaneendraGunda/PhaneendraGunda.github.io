I"™d<p>There is a great satisfaction to set up own Blog on GitHub pages. It took me a while to gather all the information from various sources and combine it to create a stylish website.</p>

<p>This article will lead you through all the steps and explain how set up your own open, professional-looking Blog. Which is perfect to show off portfolio, share knowledge and post easy to access tech articles for your future self.
<!--more--></p>

<p>You‚Äôll be surprised how simple it is to combine most powerful technologies these days!</p>

<p>The guide assumes the reader has little to no knowledge of html/css/javascript/ruby/github-commands or other languages. Anybody with PC should be able to accomplish it in a few hours.</p>

<p>Without further ado‚Ä¶ <strong>Let‚Äôs get started!</strong></p>

<h2 id="step-1-github-pages">Step 1: <a href="https://pages.github.com/">GitHub Pages</a></h2>

<p>You‚Äôll need a github account. If you don‚Äôt yet have one, <a href="github.com">register it</a>.</p>

<p>Quick question: <strong>What is git?</strong> - <em>Simply put, it is a control version manager.</em></p>

<p>Ok, let‚Äôs move on.</p>

<p>There is a Github service: <a href="https://pages.github.com/">pages.github.com</a> conveniently allows to host a personal (or company) website with a hostname like: <code class="highlighter-rouge">username.github.io</code>
From here on you have 2 choices:</p>

<ul>
  <li>Follow tutorial on amazing <a href="https://pages.github.com/">pages.github</a> main page and create a page super quickly. The drawback is less customisation.</li>
  <li>Follow this guide further. Understand and apply configurations. Maintain website locally.</li>
</ul>

<p>As github pages suggest, the very first steps would be:</p>

<blockquote>
  <p>Head over to <a href="(github.com)">GitHub</a> and create a new repository named username.github.io, where username is your username (or organization name) on GitHub.</p>
</blockquote>

<p><img src="http://localhost:4000/images/create_repo.png" alt="Create Repository username.github.io" /></p>

<p>It is important to create repository with username exactly the same as registered. No need to initialize repository with <code class="highlighter-rouge">ReadMe.md</code>.</p>

<p>A terminal as a git client required for further steps. <a href="https://git-scm.com/download/win">Get latest version here.</a>
Next item would be to configure authentication for connection to Git via Git terminal.</p>

<ol>
  <li><a href="https://help.github.com/articles/caching-your-github-password-in-git/">Caching password in Git</a></li>
  <li><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/">Generate SSH key</a></li>
</ol>

<p>Cool!</p>

<p><em>Brace yourself! And follow carefully step by step. It is rewarding after all :)</em></p>

<p>A few basic commands to navigate through your system via the terminal:
<code class="highlighter-rouge">pwd</code> - shows the directory you are in
<code class="highlighter-rouge">ls</code> - lists files in current directory
<code class="highlighter-rouge">cd</code> - ‚Äúchange directory‚Äù - navigating to a specified directory</p>

<p>Now we‚Äôll fetch the repository to you machine by running the command (be sure to replace <em>username</em> with yours):</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/username/username.github.io
</code></pre></div></div>

<p>This will create a directory named username.github.io inside whatever folder you are currently in. From the command name it is evident that the repository got ‚Äúcloned‚Äù to your machine (yes, in fact an empty repository would be cloned and initialized locally)</p>

<p>Eventually this newly created local folder will house all <code class="highlighter-rouge">.html</code>, <code class="highlighter-rouge">.css</code>, <code class="highlighter-rouge">.js</code> and <code class="highlighter-rouge">.markdown</code> pages of your website. All articles and posts edited or created locally then should be pushed to git repository to be presented on the web.</p>

<h2 id="step-2-jekyll">Step 2: Jekyll</h2>

<p>As explained on Jekyll‚Äôs <a href="https://jekyllrb.com/">website</a>:</p>

<blockquote>
  <p>Jekyll is a simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like Markdown) and our Liquid renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind GitHub Pages, which means you can use Jekyll to host your project‚Äôs page, blog, or website from GitHub‚Äôs servers for free.</p>
</blockquote>

<p>To explain it even friendlier: Jekyll allows to make simple webpages just by writing content in templates (using Markdown language), which are automatically converted into beautiful HTML pages with mobile-friendly responsiveness. When put on github it generates a website that is hosted absolutely free!</p>

<p><strong>Sounds great. Lets install it!</strong></p>

<p>Jekyll requires ruby, so as a prerequisite we need to install Ruby and all necessary Gems:
<a href="https://www.ruby-lang.org/en/downloads/">Get Ruby</a>
After ruby got installed, you‚Äôll need to open a new terminal window, to run ruby commands.
Let‚Äôs ensure we have latest version modules, install jekyll and a bundler:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem update --system
gem install jekyll
gem install bundler
bundler update
</code></pre></div></div>

<p>Great!
Now, cd to your folder <code class="highlighter-rouge">cd username.github.io</code> and create the website:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll new .
jekyll serve
</code></pre></div></div>

<p>Several lines would be printed out, one of them would look like <code class="highlighter-rouge">http://localhost:4000</code>. Open it in browser.
Ta-da! Website is ready!</p>

<h2 id="step-3-github">Step 3: <a href="https://github.com/">GitHub</a></h2>

<p>In this step we‚Äôll move entire website onto web and make it available at <code class="highlighter-rouge">http://username.github.io</code>.</p>

<p>Remember we ran the command <code class="highlighter-rouge">git clone https://github.com/username/username.github.io</code> - it not only cloned, but also primed our local git to a remote address (to a repository).</p>

<p>Just in case, alternative to <code class="highlighter-rouge">clone</code> would be commands:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git init
git remote add origin https://github.com/username/username.github.io
git pull origin master --allow-unrelated-histories
</code></pre></div></div>

<p>Now, when we create a post we want it to become available on web! It can be done using following commands.</p>

<p>First of all the pages should be built, using:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll serve
</code></pre></div></div>

<p>Ensure it‚Äôs been built and looks good locally. Then run following:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add .
git commit -m "initial commit"
git push origin master
</code></pre></div></div>

<p>You will be prompted for password upon <code class="highlighter-rouge">push</code> to github.</p>

<p>That would be a usual set of commands when publishing.</p>

<h2 id="step-4-create-a-page-in-jekyll">Step 4: Create a page in Jekyll</h2>

<p>The structure of a blog is very simple.
Say, you want to create <code class="highlighter-rouge">About</code> (or <em>Portfolio</em> or <em>Contacts</em>) section. Simply create <code class="highlighter-rouge">about.md</code> page in the top level of your website, i.e. directly in your <code class="highlighter-rouge">username.github.io</code> folder.
In case you want to write posts, create a file in <code class="highlighter-rouge">_posts</code> folder with naming convention as in the example: <code class="highlighter-rouge">2017-09-10-New-Post.markdown</code>.</p>

<p>Any text or code editor is suitable to manage <code class="highlighter-rouge">*.markdown</code> files. However I recommend <a href="https://typora.io/">Typora</a> as absolutely amazing Markdown editor of choice. Check it out!</p>

<p>Let‚Äôs create <code class="highlighter-rouge">About</code> page as an example.
Create a new file, called <code class="highlighter-rouge">about.md</code> in your <code class="highlighter-rouge">username.github.io</code> folder. <code class="highlighter-rouge">md</code> stands for Markdown.
The contents of the file would be like this:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
layout: page
title: about
comments: true
---
![Spike](../images/Spike.jpg 'See you, Space Cowboy!')
Hello, I'm Spike! [I travel the galaxy](https://myanimelist.net/anime/1/Cowboy_Bebop) catching for bounty constantly getting into some serious "adventures" with my absolutely crazy crew. *Be water, my friend* is the way of living that ensures I'm still alive.
</code></pre></div></div>

<p>That snippet is a good example of Markdown text used to create pages. Markdown simple and friendly syntax will be automatically converted into a full fledged html by Jekyll. The page would look like this:</p>

<hr />

<p><img src="http://localhost:4000/images/Spike.jpg" alt="Spike" title="See you, Space Cowboy!" />
Hello, I‚Äôm Spike! <a href="https://myanimelist.net/anime/1/Cowboy_Bebop">Travelling the galaxy</a> catching for bounty and constantly getting into some serious ‚Äúadventures‚Äù with my amazing and crazy crew. ‚Äú<em>Be water, my friend</em>‚Äù is the way of living that ensures I‚Äôm still alive.</p>

<hr />

<p>File starts with text between <code class="highlighter-rouge">---</code> lines - it is called Front Matter. That section contains some necessary details of the page, such as template, date, title.
Next goes actual body of the page. <code class="highlighter-rouge">![Spike](../folder/image.jpg)</code> for example inserts an image.
<code class="highlighter-rouge">[Something](https://...)</code> - creates an url
A variety of syntax highlights can be used. Here is a handy <a href="http://assemble.io/docs/Cheatsheet-Markdown.html">Cheatsheet on Markdown</a>.</p>

<h2 id="step-5-create-a-post">Step 5: Create a post</h2>

<p>Creating a post or article is easy and similar to the previous step.</p>

<p>Ensure to:</p>
<ol>
  <li>In the <code class="highlighter-rouge">_posts</code> folder create a Markdown file, name it as following: YYYY-MM-DD-post-name.md</li>
  <li>In Front Matter section, set the <code class="highlighter-rouge">layout</code> to post: <code class="highlighter-rouge">layout: post</code></li>
  <li>Set date and title in Front Matter</li>
</ol>

<p>Now, the blog post would appear on your main page!</p>

<h4 id="preloaded-text">Preloaded text</h4>

<p><a href="http://jekyllrb.com/docs/posts/#post-excerpts">Post excerpts</a> are first lines of your article content displayed on the main page.</p>

<p>By default only the first paragraph will be displayed as an excerpt. Alternatively can be controlled by setting custom separator in the Front Matter section as following:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
excerpt_separator: &lt;!--more--&gt;
---
</code></pre></div></div>

<h2 id="step-6-adding-comments">Step 6: Adding comments!</h2>

<p>We‚Äôll use a popular service called <a href="https://disqus.com/home/">Disqus</a>, you probably familiar with so far. So, a Disqus account is required. Go get it, if you don‚Äôt have one.</p>

<p>When we did <code class="highlighter-rouge">jekyll new &lt;PATH&gt;</code> command, Jekyll installed a website with <em>gem-based theme</em> called Minima.
What is so called <em>gem-based</em>? Simply put, most configs, templates and theme files are stored as gems for your Ruby.
As explained in <a href="https://jekyllrb.com/docs/themes/">Jekyll docs</a> the goal is:</p>
<blockquote>
  <p>To allow you to get all the benefits of a robust, continually updated theme without having all the theme‚Äôs files getting in your way and over-complicating what might be your primary focus: creating content.</p>
</blockquote>

<p>Ok, what that means for us in practice, is that we need to copy certain files from gem folder to our <code class="highlighter-rouge">username.github.io</code> folder in order to edit it and add comments!
Find out where gem is stored on your computer with a command <code class="highlighter-rouge">bundle show minima</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>E:\Git\silversurfer0.github.io&gt;bundle show minima
C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minima-2.1.1
</code></pre></div></div>

<p>Jekyll docs explain:</p>
<blockquote>
  <p>To replace layouts or includes in your theme, make a copy in your <code class="highlighter-rouge">_layouts</code> or <code class="highlighter-rouge">_includes</code> directory of the specific file you wish to modify, or create the file from scratch giving it the same name as the file you wish to override.</p>
</blockquote>

<p>Ok, keeping above in mind, lets do the following:
Create <code class="highlighter-rouge">_includes</code> folder in  <code class="highlighter-rouge">username.github.io</code> directory. Then create a file <code class="highlighter-rouge">disqus_comments.html</code> inside, with the contents:</p>

<p><img src="/images/pages_github_if_page_comments.png" alt="if page comments" /></p>

<p>Any code in between these two lines will be included if Front Matter for that page has <code class="highlighter-rouge">comments: true</code>.
Go to <a href="https://silverthread.disqus.com/admin/install/">Disqus to get Universal Code</a> for Jekyll and insert it between <code class="highlighter-rouge">if</code> lines.
Universal code looks like this:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">disqus_thread</span><span class="dl">"</span><span class="o">&gt;&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>

<span class="cm">/**

- RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
- LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/</span>
  <span class="cm">/*
  var disqus_config = function () {
  this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
  this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
  };
  */</span>
  <span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="c1">// DON'T EDIT BELOW THIS LINE</span>
  <span class="kd">var</span> <span class="nx">d</span> <span class="o">=</span> <span class="nb">document</span><span class="p">,</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">script</span><span class="dl">'</span><span class="p">);</span>
  <span class="nx">s</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">https://silverthread.disqus.com/embed.js</span><span class="dl">'</span><span class="p">;</span>
  <span class="nx">s</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="dl">'</span><span class="s1">data-timestamp</span><span class="dl">'</span><span class="p">,</span> <span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">());</span>
  <span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">head</span> <span class="o">||</span> <span class="nx">d</span><span class="p">.</span><span class="nx">body</span><span class="p">).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
  <span class="p">})();</span>
  <span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="nx">noscript</span><span class="o">&gt;</span><span class="nx">Please</span> <span class="nx">enable</span> <span class="nx">JavaScript</span> <span class="nx">to</span> <span class="nx">view</span> <span class="nx">the</span> <span class="nx">comments</span> <span class="nx">powered</span> <span class="nx">by</span> <span class="nx">Disqus</span><span class="p">.</span><span class="o">&lt;</span><span class="sr">/noscript</span><span class="err">&gt;
</span></code></pre></div></div>

<p>Please note, that <code class="highlighter-rouge">s.src</code> is given for my website! Disqus should provide you with your own url.</p>

<p>Next, copy <code class="highlighter-rouge">post.html</code> template from gem-based <code class="highlighter-rouge">_layouts</code> to local <code class="highlighter-rouge">_layouts</code> folder.
In this layout template we‚Äôll put one-line code that would include disqus comments to any post we want. So, just above the closing <code class="highlighter-rouge">&lt;/article&gt;</code> tag add the following:</p>

<p><img src="/images/include_disqus_comments.png" alt="include disqus comments" /></p>

<p>Cool!</p>

<p>Posts with <code class="highlighter-rouge">comments: true</code> set in the Front Matter should now have comments enabled!</p>

<h4 id="optional-set-up-comment-count">Optional: <strong>set up comment count</strong></h4>

<p>Add the following to <code class="highlighter-rouge">_layouts/default.html</code> before the closing <code class="highlighter-rouge">body</code> tag. Change <code class="highlighter-rouge">SHORTNAME</code> to the Disqus shortname you are using.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">id</span><span class="o">=</span><span class="dl">"</span><span class="s2">dsq-count-scr</span><span class="dl">"</span> <span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">//SHORTNAME.disqus.com/count.js</span><span class="dl">"</span> <span class="k">async</span><span class="o">&gt;&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<p>Add <code class="highlighter-rouge">#disqus_thread</code> to the end of a URL and Disqus will count the comments on the page the link points to. For example, my <code class="highlighter-rouge">_layouts/post.html</code> contains the following code. Note the comment count at the top of this post.</p>

<p><img src="/images/pages_github_comment_count.png" alt="pages_comment_count" /></p>

<p><code class="highlighter-rouge">index.html</code> contains the following code to display the comment count for each post in the home page:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="dl">"</span><span class="s2">https://sgeos.github.io#disqus_thread</span><span class="dl">"</span><span class="o">&gt;</span><span class="mi">0</span> <span class="nx">Comments</span><span class="o">&lt;</span><span class="sr">/a</span><span class="err">&gt;
</span></code></pre></div></div>

<p>Possible reference, in case of hostname or postname migration, a <a href="https://help.disqus.com/customer/portal/articles/286778-migration-tools">Disqus Migration Tool</a> can be used, to transfer comments if any.</p>

<h2 id="step-7-adding-google-analytics-for-jekyll">Step 7: Adding Google Analytics for Jekyll</h2>

<p>Google Analytics is a powerful tool to see how your site performs on the web with vast capabilities, all provided by a small code snippet to be inserted into the head section of a website. Go get <a href="http://analytics.google.com/">unique code snippet from Google Analytics</a>.</p>

<p>Analytics provides several options:</p>
<ol>
  <li>A new Website Tracking <code class="highlighter-rouge">gtag.js</code> (Global Site Tracking). New Beta.</li>
  <li><code class="highlighter-rouge">analytics.js</code> - a conservative choice. ‚Äú<em>If you are not ready to upgrade to Website Tracking yet</em>‚Äù - as their page says.</li>
</ol>

<p>I stick to the newest option. It looks something like this:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!--</span> <span class="nx">Global</span> <span class="nx">Site</span> <span class="nx">Tag</span> <span class="p">(</span><span class="nx">gtag</span><span class="p">.</span><span class="nx">js</span><span class="p">)</span> <span class="o">-</span> <span class="nx">Google</span> <span class="nx">Analytics</span> <span class="o">--&gt;</span>
<span class="o">&lt;</span><span class="nx">script</span> <span class="k">async</span> <span class="nx">src</span><span class="o">=</span><span class="dl">"</span><span class="s2">https://www.googletagmanager.com/gtag/js?id=&lt;YOUR UNIQUE ID&gt;</span><span class="dl">"</span><span class="o">&gt;&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
  <span class="nb">window</span><span class="p">.</span><span class="nx">dataLayer</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">dataLayer</span> <span class="o">||</span> <span class="p">[];</span>
  <span class="kd">function</span> <span class="nx">gtag</span><span class="p">(){</span><span class="nx">dataLayer</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)};</span>
  <span class="nx">gtag</span><span class="p">(</span><span class="dl">'</span><span class="s1">js</span><span class="dl">'</span><span class="p">,</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">());</span>
  <span class="nx">gtag</span><span class="p">(</span><span class="dl">'</span><span class="s1">config</span><span class="dl">'</span><span class="p">,</span> <span class="o">&lt;</span><span class="nx">YOUR</span> <span class="nx">UNIQUE</span> <span class="nx">ID</span><span class="o">&gt;</span><span class="p">);</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<p>Create <code class="highlighter-rouge">google-analytics.html</code> in <code class="highlighter-rouge">_includes</code>, and insert Google Analytics script from above.
Next, we‚Äôll enable it on all pages. Doing this is easy: include the google-analytics into relevant template file.</p>

<p>Copy <code class="highlighter-rouge">default.html</code> template from gem-based <code class="highlighter-rouge">_layouts</code> to your local <code class="highlighter-rouge">_layouts</code> folder.
Put this line:</p>

<p><img src="/images/pages_github_analystics.png" alt="include analytics" /></p>

<p>in between the opening <code class="highlighter-rouge"><span class="nt">&lt;html&gt;</span></code> and <code class="highlighter-rouge">&lt;body&gt;</code> tags of the default.html file.
<strong>Congratulations! We are done!</strong></p>

<h2 id="conclusion">Conclusion</h2>

<p>Hope this guide was helpful! We‚Äôve gone through quite a lot of steps so far! This is rewarding!</p>

<p>Now you have a solid Blog!
From now on this powerful tool would be perfect to share articles, cheatsheets, show off portfolio and all this in a transparent and reachable form all over the world provided by amazing github!</p>

<p>Again, a handy cheatsheet of most frequent commands.
<em>First serve and build pages locally:</em></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle exec jekyll serve
</code></pre></div></div>

<p><em>Then upload to github:</em></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd username.github.io
git init
git clone https://github.com/username/username.github.io.git
git commit -m "Update with my new useful article on Machine Learning"
git push origin master
</code></pre></div></div>

<p><strong>Enjoy blogging!</strong></p>

<p>Your comments are highly regarded, whether it is just saying hi, weight in with appreciation, addition, edition, suggestion, rendition. Or any other form of ‚Äúdition‚Äù.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>															*See you, space cowboy...*
</code></pre></div></div>

<h4 id="sources">Sources</h4>
<p><a href="https://briancaffey.github.io/2016/03/17/jekyll-tutorial.html">Great tutorial by Brian Caffey</a> - Thanks Brian!</p>

<p><a href="http://sgeos.github.io/jekyll/disqus/2016/02/14/adding-disqus-to-a-jekyll-blog.html">Sgeos for adding disqus</a></p>

<p><a href="https://jekyllrb.com/docs/home/">Jekyll docs</a></p>
:ET